"""add_product_types_and_components

Revision ID: add_product_types_and_components
Revises: marketplace_fields
Create Date: 2025-07-25 22:15:32.394392

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'add_product_types_and_components'
down_revision = 'marketplace_fields'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Adicionar campo product_type como string primeiro
    op.add_column('products', sa.Column('product_type', sa.String(length=20), nullable=True))
    
    # Atualizar produtos existentes para 'simple'
    op.execute("UPDATE products SET product_type = 'simple' WHERE product_type IS NULL")
    
    # Tornar o campo NOT NULL após atualizar
    op.alter_column('products', 'product_type', nullable=False)
    
    # Criar tabela product_components
    op.create_table('product_components',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('composite_product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('component_product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('unit', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_required', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('assembly_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('instructions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('additional_cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['composite_product_id'], ['products.id'], name='product_components_composite_product_id_fkey'),
    sa.ForeignKeyConstraint(['component_product_id'], ['products.id'], name='product_components_component_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_components_pkey')
    )
    
    # Criar índices
    op.create_index('ix_product_components_id', 'product_components', ['id'], unique=False)
    op.create_index('ix_product_components_composite_product_id', 'product_components', ['composite_product_id'], unique=False)
    op.create_index('ix_product_components_component_product_id', 'product_components', ['component_product_id'], unique=False)
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Remover índices
    op.drop_index('ix_product_components_component_product_id', table_name='product_components')
    op.drop_index('ix_product_components_composite_product_id', table_name='product_components')
    op.drop_index('ix_product_components_id', table_name='product_components')
    
    # Remover tabela product_components
    op.drop_table('product_components')
    
    # Remover campo product_type
    op.drop_column('products', 'product_type')
    
    # ### end Alembic commands ### 