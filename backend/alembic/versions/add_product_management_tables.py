"""add_product_management_tables

Revision ID: add_product_management_tables
Revises: 4f08ffb8c2fa
Create Date: 2025-07-25 21:40:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'add_product_management_tables'
down_revision = '4f08ffb8c2fa'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Criar tabela products
    op.create_table('products',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('brand', sa.String(length=100), nullable=True),
        sa.Column('model', sa.String(length=100), nullable=True),
        sa.Column('ncm', sa.String(length=20), nullable=True),
        sa.Column('ean', sa.String(length=20), nullable=True),
        sa.Column('gtin', sa.String(length=20), nullable=True),
        sa.Column('category', sa.String(length=100), nullable=True),
        sa.Column('subcategory', sa.String(length=100), nullable=True),
        sa.Column('weight', sa.Float(), nullable=True),
        sa.Column('length', sa.Float(), nullable=True),
        sa.Column('width', sa.Float(), nullable=True),
        sa.Column('height', sa.Float(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('is_service', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_index(op.f('ix_products_ncm'), 'products', ['ncm'], unique=False)
    
    # Criar tabela product_skus
    op.create_table('product_skus',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('sku_code', sa.String(length=50), nullable=False),
        sa.Column('barcode', sa.String(length=50), nullable=True),
        sa.Column('color', sa.String(length=50), nullable=True),
        sa.Column('size', sa.String(length=20), nullable=True),
        sa.Column('material', sa.String(length=100), nullable=True),
        sa.Column('flavor', sa.String(length=50), nullable=True),
        sa.Column('variant_description', sa.Text(), nullable=True),
        sa.Column('cost_price', sa.Float(), nullable=False),
        sa.Column('sale_price', sa.Float(), nullable=False),
        sa.Column('wholesale_price', sa.Float(), nullable=True),
        sa.Column('promotional_price', sa.Float(), nullable=True),
        sa.Column('current_stock', sa.Integer(), nullable=True),
        sa.Column('minimum_stock', sa.Integer(), nullable=True),
        sa.Column('maximum_stock', sa.Integer(), nullable=True),
        sa.Column('reserved_stock', sa.Integer(), nullable=True),
        sa.Column('warehouse_location', sa.String(length=100), nullable=True),
        sa.Column('shelf_location', sa.String(length=50), nullable=True),
        sa.Column('taxes', sa.JSON(), nullable=True),
        sa.Column('supplier_sku', sa.String(length=50), nullable=True),
        sa.Column('supplier_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('is_available_for_sale', sa.Boolean(), nullable=True),
        sa.Column('is_stock_sku', sa.Boolean(), nullable=True),
        sa.Column('stock_sku_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
        sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
        sa.ForeignKeyConstraint(['stock_sku_id'], ['product_skus.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('sku_code')
    )
    op.create_index(op.f('ix_product_skus_id'), 'product_skus', ['id'], unique=False)
    op.create_index(op.f('ix_product_skus_sku_code'), 'product_skus', ['sku_code'], unique=True)
    op.create_index(op.f('ix_product_skus_barcode'), 'product_skus', ['barcode'], unique=False)
    
    # Criar tabela stock_movements
    op.create_table('stock_movements',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('sku_id', sa.Integer(), nullable=False),
        sa.Column('company_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('movement_type', sa.Enum('entry', 'exit', 'adjustment', 'transfer', 'reservation', 'return', name='movementtype'), nullable=False),
        sa.Column('movement_reason', sa.Enum('purchase', 'sale', 'transfer_in', 'transfer_out', 'adjustment_positive', 'adjustment_negative', 'inventory', 'damaged', 'expired', 'loss', 'return_customer', 'return_supplier', name='movementreason'), nullable=False),
        sa.Column('quantity', sa.Integer(), nullable=False),
        sa.Column('previous_stock', sa.Integer(), nullable=False),
        sa.Column('current_stock', sa.Integer(), nullable=False),
        sa.Column('reference_document', sa.String(length=100), nullable=True),
        sa.Column('reference_id', sa.Integer(), nullable=True),
        sa.Column('from_location', sa.String(length=100), nullable=True),
        sa.Column('to_location', sa.String(length=100), nullable=True),
        sa.Column('unit_cost', sa.Float(), nullable=True),
        sa.Column('total_cost', sa.Float(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
        sa.ForeignKeyConstraint(['sku_id'], ['product_skus.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_movements_id'), 'stock_movements', ['id'], unique=False)
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stock_movements_id'), table_name='stock_movements')
    op.drop_table('stock_movements')
    op.drop_index(op.f('ix_product_skus_barcode'), table_name='product_skus')
    op.drop_index(op.f('ix_product_skus_sku_code'), table_name='product_skus')
    op.drop_index(op.f('ix_product_skus_id'), table_name='product_skus')
    op.drop_table('product_skus')
    op.drop_index(op.f('ix_products_ncm'), table_name='products')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_table('products')
    # ### end Alembic commands ### 