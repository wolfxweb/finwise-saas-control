"""Add nota fiscal tables

Revision ID: e8f810f2a3f8
Revises: 274dbe33c8aa
Create Date: 2025-07-24 00:47:22.908359

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e8f810f2a3f8'
down_revision = '274dbe33c8aa'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Remover tabelas na ordem correta (primeiro as que dependem)
    op.drop_table('payments')
    op.drop_table('invoice_items')
    op.drop_table('invoices')
    op.drop_table('billing_settings')
    
    # Criar tabelas de nota fiscal
    op.create_table('notas_fiscais',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero', sa.String(length=50), nullable=False),
    sa.Column('serie', sa.String(length=10), nullable=False),
    sa.Column('tipo', sa.String(length=20), nullable=False),
    sa.Column('natureza_operacao', sa.String(length=255), nullable=False),
    sa.Column('data_emissao', sa.DateTime(), nullable=False),
    sa.Column('data_entrada_saida', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('protocolo_autorizacao', sa.String(length=100), nullable=True),
    sa.Column('data_autorizacao', sa.DateTime(), nullable=True),
    sa.Column('emitente_nome', sa.String(length=255), nullable=False),
    sa.Column('emitente_cnpj', sa.String(length=18), nullable=False),
    sa.Column('emitente_ie', sa.String(length=20), nullable=True),
    sa.Column('emitente_endereco', sa.JSON(), nullable=True),
    sa.Column('destinatario_nome', sa.String(length=255), nullable=False),
    sa.Column('destinatario_documento', sa.String(length=18), nullable=False),
    sa.Column('destinatario_email', sa.String(length=255), nullable=True),
    sa.Column('destinatario_telefone', sa.String(length=20), nullable=True),
    sa.Column('destinatario_endereco', sa.JSON(), nullable=True),
    sa.Column('valor_total', sa.Float(), nullable=False),
    sa.Column('valor_produtos', sa.Float(), nullable=False),
    sa.Column('valor_icms', sa.Float(), nullable=False),
    sa.Column('valor_ipi', sa.Float(), nullable=False),
    sa.Column('valor_pis', sa.Float(), nullable=False),
    sa.Column('valor_cofins', sa.Float(), nullable=False),
    sa.Column('valor_frete', sa.Float(), nullable=False),
    sa.Column('valor_seguro', sa.Float(), nullable=False),
    sa.Column('valor_desconto', sa.Float(), nullable=False),
    sa.Column('forma_pagamento', sa.String(length=100), nullable=True),
    sa.Column('condicao_pagamento', sa.String(length=255), nullable=True),
    sa.Column('transportadora_nome', sa.String(length=255), nullable=True),
    sa.Column('transportadora_cnpj', sa.String(length=18), nullable=True),
    sa.Column('transportadora_placa', sa.String(length=10), nullable=True),
    sa.Column('transportadora_uf', sa.String(length=2), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('informacoes_adicionais', sa.Text(), nullable=True),
    sa.Column('xml_content', sa.Text(), nullable=True),
    sa.Column('xml_filename', sa.String(length=255), nullable=True),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notas_fiscais_id'), 'notas_fiscais', ['id'], unique=False)
    op.create_index(op.f('ix_notas_fiscais_numero'), 'notas_fiscais', ['numero'], unique=False)
    
    op.create_table('notas_fiscais_produtos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nota_fiscal_id', sa.Integer(), nullable=False),
    sa.Column('codigo', sa.String(length=50), nullable=False),
    sa.Column('descricao', sa.String(length=500), nullable=False),
    sa.Column('ncm', sa.String(length=10), nullable=True),
    sa.Column('cfop', sa.String(length=10), nullable=False),
    sa.Column('unidade', sa.String(length=10), nullable=False),
    sa.Column('quantidade', sa.Float(), nullable=False),
    sa.Column('valor_unitario', sa.Float(), nullable=False),
    sa.Column('valor_total', sa.Float(), nullable=False),
    sa.Column('valor_icms', sa.Float(), nullable=False),
    sa.Column('valor_ipi', sa.Float(), nullable=False),
    sa.Column('valor_pis', sa.Float(), nullable=False),
    sa.Column('valor_cofins', sa.Float(), nullable=False),
    sa.Column('informacoes_adicionais', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['nota_fiscal_id'], ['notas_fiscais.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notas_fiscais_produtos_id'), 'notas_fiscais_produtos', ['id'], unique=False)
    
    op.create_foreign_key(None, 'branches', 'companies', ['company_id'], ['id'])
    op.alter_column('companies', 'state',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=2),
               existing_nullable=True)
    op.drop_column('plans', 'marketplace_sync')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plans', sa.Column('marketplace_sync', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.alter_column('companies', 'state',
               existing_type=sa.String(length=2),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
    op.drop_constraint(None, 'branches', type_='foreignkey')
    op.create_table('billing_settings',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('billing_day', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('grace_period_days', sa.INTEGER(), server_default=sa.text('5'), autoincrement=False, nullable=True),
    sa.Column('auto_suspend', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('default_payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('credit_card_last4', sa.VARCHAR(length=4), autoincrement=False, nullable=True),
    sa.Column('credit_card_brand', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('credit_card_expiry', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.Column('send_invoice_emails', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('send_payment_reminders', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='billing_settings_company_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='billing_settings_pkey')
    )
    op.create_table('payments',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('invoice_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('payment_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], name='payments_invoice_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='payments_pkey')
    )
    op.create_table('invoice_items',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('invoice_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('module_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('unit_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('total_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], name='invoice_items_invoice_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], name='invoice_items_module_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='invoice_items_pkey')
    )
    op.create_table('invoices',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('subscription_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('invoice_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('billing_period_start', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('billing_period_end', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('due_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('issue_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('subtotal', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('tax_amount', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('discount_amount', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('payment_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('billing_address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('billing_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='invoices_company_id_fkey'),
    sa.ForeignKeyConstraint(['subscription_id'], ['company_subscriptions.id'], name='invoices_subscription_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='invoices_pkey'),
    sa.UniqueConstraint('invoice_number', name='invoices_invoice_number_key')
    )
    # ### end Alembic commands ###
